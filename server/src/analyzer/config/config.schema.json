{
  "$schema": "http://json-schema.org/draft-04/schema",
  "title": "JSON Schema for SIA-REST, a statical rest api validator",
  "description": "This tool checks for the correct use of rest APIÂ´s across a distributed microservice application. First define a list of services used in your application",
  "type": "array",
  "additionalItems": false,
  "minItems": 1,
  "items": {
    "type": "object",
    "additionalProperties": false,
    "description": "A short service description",
    "defaultSnippets": [
      {
        "label": "sia-service",
        "description": "Creates a new service",
        "body": {
          "name": "${1:my-service}",
          "baseUri": "${2:http://localhost:3000/api}",
          "endpoints": []
        }
      }
    ],
    "properties": {
      "name": {
        "type": "string",
        "minLength": 5,
        "pattern": "^(?:@[a-z0-9-*~][a-z0-9-*._~]*/)?[a-z0-9-~][a-z0-9-._~]*$",
        "description": "The name of this service, e.g. CostumerService/OrderService/DeviceService etc."
      },
      "baseUri": {
        "type": "string",
        "format": "uri",
        "description": "The url of this service, e.g. https://myshop.com/api/customer or http://localhost:3000"
      },
      "endpoints": {
        "type": "array",
        "description": "A list of endpoints of this service",
        "minItems": 1,
        "additionalItems": false,
        "items": {
          "type": "object",
          "description": "A description of a single endpoint of this service",
          "additionalProperties": false,
          "defaultSnippets": [
            {
              "label": "sia-endpoint",
              "description": "Creates a new endpoint for this service",
              "body": {
                "method": "${1|GET,POST,PUT,DELETE|}",
                "path": "${2:/hello}",
                "response": "${3:string}"
              }
            }
          ],
          "properties": {
            "method": {
              "type": "string",
              "description": "The HTTP Method of this endpoint",
              "enum": [ "GET", "POST", "PUT", "DELETE" ]
            },
            "path": {
              "type": "string",
              "description": "The subpath of this endpoint eg. /customer or /orders",
              "format": "uri-reference"
            },
            "response": {
              "description": "The response type of this endpoint. May be an string for a primitive type like boolean or number. Can also be a complex data type.",
              "oneOf": [
                {
                  "type": "string",
                  "description": "Use a simple type as return type.",
                  "enum": [ "string", "number", "boolean" ]
                },
                {
                  "type": "object",
                  "description": "Use a complex object type as return type",
                  "properties": {
                    "isArray": {
                      "type": "boolean",
                      "description": "Is this response an array type, true or false"
                    }
                  },
                  "additionalProperties": true
                }
              ]
            },
            "request": {
              "type": "object",
              "description": "Use a complex object type as request type",
              "properties": {},
              "additionalProperties": true
            }
          },
          "required": [ "method", "path", "response" ]
        }
      }
    },
    "required": [ "name", "baseUri" ]
  }
}